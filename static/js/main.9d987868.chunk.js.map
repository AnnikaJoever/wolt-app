{"version":3,"sources":["reportWebVitals.js","components/RestaurantCard.jsx","components/CardContainer.jsx","views/Restaurants.jsx","App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RestaurantCard","props","name","image","description","tags","closed","online","className","style","backgroundImage","join","CardContainer","useState","restaurants","items","setItems","dir","sortConfig","setSortConfig","console","log","sorting","a","b","aName","toLowerCase","bName","type","onClick","sort","sortRestaurants","map","item","Restaurants","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBC0BCQ,EA/BQ,SAACC,GAAW,IAE3BC,EAKAD,EALAC,KACAC,EAIAF,EAJAE,MACAC,EAGAH,EAHAG,YACAC,EAEAJ,EAFAI,KAIEC,GAAoB,IAFtBL,EADAM,OAG8B,qBAAKC,UAAU,UAAf,sBAA0C,GAE5E,OACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,aAAaC,MAAO,CAAEC,gBAAgB,OAAD,OAASP,EAAT,MAApD,SACMG,IAEN,sBAAKE,UAAU,sBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,aAAf,SAA8BN,IAC9B,mBAAGM,UAAU,mBAAb,SAAkCJ,OAEtC,qBAAKI,UAAU,YAAf,SACI,4BAAKH,EAAKM,KAAK,mBC+BxBC,EApDO,WAAO,IAAD,EACEC,mBAASC,EAAYA,aADvB,mBACjBC,EADiB,KACVC,EADU,OAEYH,mBAAS,CAAEI,IAAK,OAF5B,mBAEjBC,EAFiB,KAELC,EAFK,KAIxBC,QAAQC,IAAIH,GACZE,QAAQC,IAAI,UAAWN,GAEvB,IAWMO,EAAU,SAACC,EAAGC,GAChB,IAAMC,EAAQF,EAAErB,KAAKwB,cACfC,EAAQH,EAAEtB,KAAKwB,cAErB,OAAID,EAAQE,EACmB,QAAnBT,EAAWD,KAAkB,EAAI,EAEzCQ,EAAQE,EACmB,QAAnBT,EAAWD,IAAiB,GAAK,EAEtC,GAGX,OACI,mCACI,sBAAKT,UAAU,oBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,wBAAQoB,KAAK,SAASpB,UAAU,SAASqB,QAAU,kBA5B3C,WACpB,IAAIZ,EAAM,MAEa,QAAnBC,EAAWD,MACXA,EAAM,QAGVE,EAAc,CAAEF,QAChBD,EAASD,EAAMe,KAAKR,IAoBiDS,IAAzD,2CAEJ,qBAAKvB,UAAU,sBAAf,SAEQO,EAAMiB,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,eAESA,GADCA,EAAK/B,iBClC5BgC,EARK,WAChB,OACI,mCACI,cAAC,EAAD,OCGGC,EANH,kBACV,mCACE,cAAC,EAAD,O,MCEJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjD,K","file":"static/js/main.9d987868.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst RestaurantCard = (props) => {\r\n    const {\r\n        name,\r\n        image,\r\n        description,\r\n        tags,\r\n        online,\r\n    } = props;\r\n    \r\n    const closed = online === false ? <div className=\"offline\">Suljettu</div> : '';\r\n\r\n    return (\r\n        <div className=\"list_item\">\r\n            <div className=\"restaurant_card\">\r\n                <div className=\"card_image\" style={{ backgroundImage: `url(${image})` }}>\r\n                    { closed }\r\n                </div>\r\n                <div className=\"card_info_container\">\r\n                    <div className=\"card_title_text\">\r\n                        <div className=\"card_title\">{ name }</div>\r\n                        <p className=\"card_description\">{ description }</p>\r\n                    </div>\r\n                    <div className=\"card_tags\">\r\n                        <p>{ tags.join(', ') }</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantCard;","import React, { useState } from 'react';\r\nimport restaurants from '../data/restaurants.json';\r\nimport RestaurantCard from './RestaurantCard';\r\n\r\nconst CardContainer = () => {\r\n    const [items, setItems] = useState(restaurants.restaurants);\r\n    const [sortConfig, setSortConfig] = useState({ dir: null });\r\n\r\n    console.log(sortConfig);\r\n    console.log('items: ', items);\r\n\r\n    const sortRestaurants = () => {\r\n        let dir = 'asc';\r\n\r\n        if (sortConfig.dir === 'asc') {\r\n            dir = 'desc';\r\n        }\r\n\r\n        setSortConfig({ dir });\r\n        setItems(items.sort(sorting));\r\n    };\r\n\r\n    const sorting = (a, b) => {\r\n        const aName = a.name.toLowerCase();\r\n        const bName = b.name.toLowerCase();\r\n\r\n        if (aName > bName) {\r\n            return (sortConfig.dir === 'asc') ? -1 : 1;\r\n        }\r\n        if (aName < bName) {\r\n            return (sortConfig.dir === 'asc') ? 1 : -1;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card_list_wrapper\">\r\n                <div className=\"search_bar\">\r\n                    <button type=\"button\" className=\"button\" onClick={ () => sortRestaurants() }>Järjestä nimen mukaan</button>\r\n                </div>\r\n                <div className=\"card_list_container\">\r\n                    {\r\n                        items.map((item) => (\r\n                            <RestaurantCard\r\n                                key={ item.name }\r\n                                { ...item }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CardContainer;","import React from 'react';\r\nimport CardContainer from '../components/CardContainer';\r\n\r\nconst Restaurants = () => {\r\n    return (\r\n        <>\r\n            <CardContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Restaurants;","import React from 'react';\nimport Restaurants from './views/Restaurants';\n\nconst App = () => (\n  <>\n    <Restaurants />\n  </>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}